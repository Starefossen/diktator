{
    "swagger": "2.0",
    "info": {
        "description": "A family-friendly spelling test application API",
        "title": "Diktator API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Diktator Support",
            "url": "https://github.com/starefossen/diktator",
            "email": "support@diktator.app"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/starefossen/diktator/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/api/families": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about the user's family",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Get Family Information",
                "responses": {
                    "200": {
                        "description": "Family information",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Family access validation required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Service unavailable or failed to retrieve family",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/families/children": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all children in the authenticated user's family",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Get Family Children",
                "responses": {
                    "200": {
                        "description": "List of family children",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Family access validation required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve children",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new child account (parent only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "children"
                ],
                "summary": "Create Child Account",
                "parameters": [
                    {
                        "description": "Child account creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateChildAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Child account created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "403": {
                        "description": "Parent role required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Service unavailable or failed to create child account",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/families/children/{childId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing child account (parent only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "children"
                ],
                "summary": "Update Child Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Child ID",
                        "name": "childId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated child account data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChildAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Child account updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Parent access required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Child not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update child account",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a child account (parent only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "children"
                ],
                "summary": "Delete Child Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Child ID",
                        "name": "childId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Child account deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Parent access required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Child not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete child account",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/families/children/{childId}/progress": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get progress data for a specific child",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "children"
                ],
                "summary": "Get Child Progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Child ID",
                        "name": "childId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Child progress data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Parent access required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Child not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve child progress",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/families/children/{childId}/results": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get test results for a specific child",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "children"
                ],
                "summary": "Get Child Results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Child ID",
                        "name": "childId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Child test results",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Parent access required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Child not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve child results",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/families/progress": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get progress data for all family members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Get Family Progress",
                "responses": {
                    "200": {
                        "description": "Family progress data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Family access validation required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve family progress",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/families/results": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get test results for all members of the authenticated user's family",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Get Family Results",
                "responses": {
                    "200": {
                        "description": "Family test results",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Family access validation required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve family results",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/families/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistical data for the authenticated user's family",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Get Family Statistics",
                "responses": {
                    "200": {
                        "description": "Family statistics",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Family access validation required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve family stats",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user account after Firebase authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "User creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "displayName": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Firebase UID not found in token",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User Profile",
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "User not found - needs registration",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/users/results": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get test results for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Test Results",
                "responses": {
                    "200": {
                        "description": "Test results",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "User authentication required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve test results",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Save a test result for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Save Test Result",
                "parameters": [
                    {
                        "description": "Test result data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaveResultRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Test result saved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "User authentication required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to save test result",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/wordsets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get word sets for the authenticated user's family",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wordsets"
                ],
                "summary": "Get Word Sets",
                "responses": {
                    "200": {
                        "description": "Word sets for the family",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Family access validation required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Service unavailable or failed to retrieve word sets",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new word set for practice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wordsets"
                ],
                "summary": "Create Word Set",
                "parameters": [
                    {
                        "description": "Word set creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateWordSetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Word set created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "User authentication required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create word set",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/wordsets/voices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of available Text-to-Speech voices for a specific language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wordsets"
                ],
                "summary": "List available TTS voices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code (e.g., 'en', 'nb-NO')",
                        "name": "language",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available voices",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve voices",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/wordsets/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a word set by ID and all associated audio files from storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wordsets"
                ],
                "summary": "Delete Word Set",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Word Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Word set and audio files deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Word set ID is required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Word set not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete word set",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/wordsets/{id}/audio/{audioId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Stream audio file for a specific audio ID within a wordset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "audio/mpeg"
                ],
                "tags": [
                    "wordsets"
                ],
                "summary": "Stream Audio File by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "WordSet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Audio ID to stream",
                        "name": "audioId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audio file content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Audio file not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/wordsets/{id}/generate-audio": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate TTS audio for all words in a word set",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wordsets"
                ],
                "summary": "Generate Audio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Word Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Audio generation started",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Word set ID is required",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Word set not found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to start audio generation",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Health status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ChildAccount": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "familyId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "description": "Parents can deactivate child accounts",
                    "type": "boolean"
                },
                "lastActiveAt": {
                    "type": "string"
                },
                "parentId": {
                    "description": "The parent who created this child account",
                    "type": "string"
                },
                "role": {
                    "description": "Always \"child\"",
                    "type": "string"
                }
            }
        },
        "models.CreateChildAccountRequest": {
            "type": "object",
            "required": [
                "displayName",
                "email",
                "familyId",
                "password"
            ],
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "familyId": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "models.CreateWordSetRequest": {
            "type": "object",
            "required": [
                "language",
                "name",
                "words"
            ],
            "properties": {
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "testConfiguration": {
                    "type": "object",
                    "additionalProperties": true
                },
                "words": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.SaveResultRequest": {
            "type": "object",
            "required": [
                "correctWords",
                "score",
                "totalWords",
                "wordSetId"
            ],
            "properties": {
                "correctWords": {
                    "type": "integer"
                },
                "incorrectWords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "score": {
                    "type": "number"
                },
                "timeSpent": {
                    "type": "integer"
                },
                "totalWords": {
                    "type": "integer"
                },
                "wordSetId": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Firebase JWT token. Format: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}